{"version":3,"sources":["scripts/main.js"],"names":["document","querySelectorAll","populations","averagePopulationSpan","querySelector","totalPopulationSpan","populationsAsNums","getAllNumbers","totalSum","calculateSum","numberOfCountries","length","totalSumFormated","populationFormated","averagePopulation","averageCalc","averageFormated","arr","map","el","textContent","split","join","arrOfpopulation","reduce","acc","curr","sum","num","dataQuantity","toLocaleString","editTextContent","target","content"],"mappings":";AAAA,aAuCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EArCyBA,IAAAA,EAAAA,SAASC,iBAAiB,eAqCnD,EAAA,EAAA,GArCUC,EAAAA,EAAAA,MAAAA,GACJC,EAAwBH,SAASI,cAAc,uBAC/CC,EAAsBL,SAASI,cAAc,qBAC7CE,EAAoBC,EAAcL,GAClCM,EAAWC,EAAaH,GACxBI,EAAoBR,EAAYS,OAChCC,EAAmBC,EAAmBL,GACtCM,EAAoBC,EAAYP,EAAUE,GAC1CM,EAAkBH,EAAmBC,GAE3C,SAASP,EAAcU,GACdA,OAAAA,EAAIC,IAAI,SAACC,GAAO,OAACA,EAAGC,YAAYC,MAAM,KAAKC,KAAK,MAGzD,SAASb,EAAac,GACbA,OAAAA,EAAgBC,OAAO,SAACC,EAAKC,GAC9BC,IAAAA,EAAMF,EAIHE,OAFPA,GAAOD,GAGN,GAGL,SAASX,EAAYa,EAAKC,GACjBD,OAAAA,EAAMC,EAGf,SAAShB,EAAmBe,GACnBA,OAAAA,EAAIE,eAAe,SAG5B,SAASC,EAAgBC,EAAQC,GAC/BD,EAAOZ,YAAca,EAGvBF,EAAgB1B,EAAqBO,GACrCmB,EAAgB5B,EAAuBa","file":"main.8a52322f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst [...populations] = document.querySelectorAll('.population');\nconst averagePopulationSpan = document.querySelector('.average-population');\nconst totalPopulationSpan = document.querySelector('.total-population');\nconst populationsAsNums = getAllNumbers(populations);\nconst totalSum = calculateSum(populationsAsNums);\nconst numberOfCountries = populations.length;\nconst totalSumFormated = populationFormated(totalSum);\nconst averagePopulation = averageCalc(totalSum, numberOfCountries);\nconst averageFormated = populationFormated(averagePopulation);\n\nfunction getAllNumbers(arr) {\n  return arr.map((el) => +el.textContent.split(',').join(''));\n}\n\nfunction calculateSum(arrOfpopulation) {\n  return arrOfpopulation.reduce((acc, curr) => {\n    let sum = acc;\n\n    sum += curr;\n\n    return sum;\n  }, 0);\n}\n\nfunction averageCalc(num, dataQuantity) {\n  return num / dataQuantity;\n}\n\nfunction populationFormated(num) {\n  return num.toLocaleString('en-US');\n}\n\nfunction editTextContent(target, content) {\n  target.textContent = content;\n}\n\neditTextContent(totalPopulationSpan, totalSumFormated);\neditTextContent(averagePopulationSpan, averageFormated);\n"]}